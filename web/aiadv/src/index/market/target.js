/**
 * @file Generated by er-sync
 * @author killeryyl<longgeyang@jesgoo.com>
 * @date Wed Nov 25 2015 16:50:10 GMT+0800 (CST)
 * Copyright (c) 2015 jesgoo.com, Inc. All Rights Reserved
 */
(function () {
    mf.index.market.target = new er.Action({
        model: mf.index.market.model.target,
        view: new er.View({
            template: 'mf_index_market_target',
            UI_PROP: {}
        }),
        STATE_MAP: {},

        onenter: function () {
            console.log('onenter');
            mf.onenter();
        },
        onentercomplete: function () {
            console.log('onentercomplete');
            mf.loaded();
            var action = this;
            var osTarget = esui.get('osTarget');
            var regionPlain = esui.get('regionPlain');
            var regionView = esui.get('regionView');
            var regionClearView = $('#regionClearView');
            var hoursTarget = esui.get('hoursTarget');
            regionPlain.onselect = function (values, value) {
                regionView.setValue(value);
            };
            regionPlain.ondeselect = function (values, value) {
                regionView.cancelValue(value);
            };
            regionView.ondelete = function (values, value) {
                regionPlain.cancelValue(value);
            };
            regionPlain.onchange = regionView.onchange = function (values) {
                if (values.length) {
                    regionClearView.show();
                }
                else {
                    regionClearView.hide();
                }
            };
            if (regionClearView.length) {
                regionClearView.unbind('click.clear').bind('click.clear',
                    function () {
                        var values = regionView.getValue();
                        regionView.cancelValue(values, {dispatch: true});
                    }
                );
            }
            action.getRegions = function () {
                var regions;
                if (regionPlain.isAllChecked()) {
                    regions = [];
                } else {
                    regions = regionPlain.getValue();
                }
                return regions;
            };
            action.getOS = function () {
                return osTarget.getValue()[0];
            };
            action.getHours = function () {
                return hoursTarget.getValueAsArray();
            };
        },
        onleave: function () {
            console.log('onleave');
        }
    });
})();