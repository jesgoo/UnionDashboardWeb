/**
 * @file Generated by er-sync
 * @author killeryyl<longgeyang@jesgoo.com>
 * @date Mon May 25 2015 17:58:03 GMT+0800 (CST)
 * Copyright (c) 2015 jesgoo.com, Inc. All Rights Reserved
 */
mf.index = {};

er.config.TEMPLATE_LIST = [
    'asset/adv-index.html'
];
er.config.DEFAULT_INDEX = "/account/index";
mf.authority = mf.m.authority('adv', 'index');
mf.cookieKeyMap = {
    'username': 'adv_user_username',
    'display_name': 'adv_user_display_name',
    'authority': 'adv_user_authority',
    'adminAuthority': 'adv_admin_authority'
};
mf.authority.register(
    {
        LOGIN: 1 // 登录
    }
);
mf.authority.isUserLogin = function () {
    return er.permission.isAllow('LOGIN');
};
$(function () {
    if ('index' === mf.getErPage()) {//generate tab
        // mf.updateNav1();
    }
});

mf.urlDebugRouter.reg({
    // 登录
    '/index/index/login': '/login',
    // 用户信息
    '/index/index/user': '/user',
    // 配置文件
    '/index/config': '/config',
    // 计划列表
    '/index/market/plan': /^\/plan\/?/i,
    // 策略列表
    '/index/market/unit': /^\/unit\/?/i,
    // 创意列表
    '/index/market/idea': /^\/idea\/?/i,
    // 资源列表
    '/index/market/resource': /^\/resource\/?/i,
    // 账户总体多日
    '/index/report/cost_total': /^\/report\/cost\/\d{8}\-\d{8}$/i,
    '/index/report/cost_os': /^\/report\/cost\/os\/\d{8}\-\d{8}$/i,
    '/index/report/cost_region': /^\/report\/cost\/region\/\d{8}\-\d{8}$/i
});

mf.windowMinWidth = 980;
mf.defaultPage = 'index';
mf.userLoad = '/index/login~force=1';

mf.index.reportRange = {
    begin: new Date('2014-11-23'),
    end: mf.getDate(-1)
};
mf.index.reportRangeToday = {
    begin: new Date('2014-11-23'),
    end: mf.getDate()
};
$(function () {
    if ('index' === mf.getErPage()) {//generate tab
        mf.clickCommand.register({
            cmd: 'loginOut',
            handle: function () {
                T.cookie.set(mf.cookieKeyMap.authority, 0);
                window.location.reload();
                return false;
            },
            rewrite: true
        });
        function mockLogin(name, opt) {
            // 暂时这样吧，用户信息以后再加入
            var user = {
                authority : parseInt(opt.authority || 0)
            };
            if (user.authority > 0) {
                user.authority |= 1;
            }

            T.cookie.set(opt.cookie, user.authority);
            return window.open(opt.page , name, '', '_blank');
        }
        var passageway = {
            admin : {
                page: '/admin.html',
                cookie: mf.cookieKeyMap.adminAuthority,
                authority: 1
            }
        };
        $('.passageway').click(function () {
            var name = $(this).data('name');
            mockLogin(name, passageway[name]);
        });
        mf.getUserInfo();
    }
});

mf.getUserInfo = mf.m.utils.throttle(function () {
    var getUrl = mf.ajaxParamFactory({
        url: '/user'
    });
    $.getJSON(getUrl.url, function (result) {
        if (result.success) {
            mf.loginIn(result);
        }
    });
}, 200);

mf.loginIn = function (result) {
    var user = result.entities;
    console.log('user', user);
    var expObj = {expires: 3600000 * 24 * 15};
    $.each([
        'username',
        'display_name'
    ], function (index, field) {
        var key = mf.cookieKeyMap[field];
        key && T.cookie.set(key, user[field] || '', expObj);
    });
    $('#' + mf.USERNAME_ID).html(user.display_name || user.username);
    var authority = 1;
    if (user.is_admin) {
        authority = authority | 256;
        $('.passageway[data-name=admin]').show();
    }
    if (window.location.search.indexOf('from=admin') > -1) {
        authority = authority | 256;
    }
    T.cookie.set(mf.cookieKeyMap.authority, authority);
    mf.authority.parse(authority);
    global_previousName = user.username;
};

mf.loginOut = function () {
    var getUrl = mf.ajaxParamFactory({
        url: '/logout'
    });
    $.getJSON(getUrl.url, function (result) {
        T.cookie.set(mf.cookieKeyMap.authority, 0);
        mf.authority.parse(0);
        er.locator.redirect('/index/login');
    });
};

mf.onenter = (function (fn) {
    return function () {
        fn.apply(this, arguments);
        mf.getUserInfo();
    }
})(mf.onenter);

var global_previousName = T.cookie.get(mf.cookieKeyMap.username);
(function () {
    setInterval(function () {
        var currentName = T.cookie.get(mf.cookieKeyMap.username);
        if (global_previousName !== currentName) {
            T.cookie.set(mf.cookieKeyMap.authority, 0);
            mf.getErPage() !== mf.getErPage(mf.userLoad) && er.locator.redirect(mf.userLoad);
        }
        global_previousName = currentName;
    }, 3000);
})();
