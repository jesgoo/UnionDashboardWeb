/**
 * @file Generated by er-sync
 * @author killeryyl<longgeyang@jesgoo.com>
 * @date Thu Apr 02 2015 11:19:59 GMT+0800 (CST)
 * Copyright (c) 2015 jesgoo.com, Inc. All Rights Reserved
 */
(function () {
    mf.index.report.dailyChannel = new er.Action({
        model: mf.index.report.model.dailyChannel,
        view: new er.View({
            template: 'mf_index_report_dailyChannel',
            UI_PROP: {
                dailyChannelDateRegion: {
                    range: mf.index.reportRange
                }
            }
        }),
        STATE_MAP: {
            'dateRegion':  mf.getDateString(mf.getDate(-7)) + ',' +
                           mf.getDateString(mf.getDate(-1))
        },

        onenter: function () {
            console.log('onenter');
            mf.onenter();
        },
        onafterrepaint: function () {
            console.log('onafterrepaint');
        },
        onafterrender: function () {
            console.log('onafterrender');
            var action = this;
            var model = action.model;
            var dateRegion = esui.get('dailyChannelDateRegion');
            dateRegion.onchange = mf.m.utils.nextTickWrapper(function (value, name, index) {
                console.log('date change', name, index);
                mf.subActionRefresh(action, {
                    dateRegion: dateRegion.getValue()
                });
            }, dateRegion);
            /*var listTable = esui.get('dailyChannelList');
            listTable.onsort = mf.m.utils.nextTickWrapper(function (orderField, order) {
                var orderBy = orderField.field;
                order = order == 'asc' ? 1 : -1;
                listTable.datasource.sort(function (a, b) {
                    return a[orderBy] > b[orderBy] ? order : -order;
                });
                listTable.render();
            }, listTable);*/
            model.set(
                'commands',
                mf.clickCommand.register(
                    [
                        {
                            cmd: 'step_media',
                            handle: function (options) {
                                window.open('#/report/media~media=' + options.media + '&name=' + options.name);
                            }
                        }
                    ],
                    {
                        region: '#' + action.view.target,
                        rewrite: true
                    }
                )
            );
        },
        onentercomplete: function () {
            console.log('onentercomplete');
            var action = this;
            var model = action.model;
            var data = model.get('lists');
            if (data.length) {
                var total = data.reduce(function (memory, n) {
                    memory.request += n.request;
                    memory.served_request += n.served_request;
                    memory.impression += n.impression;
                    memory.click += n.click;
                    memory.income += n.income;
                    memory.channel_income += n.channel_income;
                    memory.media_income += n.media_income;
                    return memory;
                }, {
                    name: '总计',
                    request: 0,
                    served_request: 0,
                    impression: 0,
                    click: 0,
                    income: 0,
                    channel_income: 0,
                    media_income: 0
                });
                if (total.impression) {
                    total.ctr = total.click / total.impression * 100;
                    total.cpm = total.income / total.impression * 1000;
                    total.fr = total.served_request / total.request * 100;
                }
            }

            esui.get('dailyChannelDownload').onclick = function () {
                var exportList = [total].concat(data);
                var fields = model.get('fields');
                var exportData = [fields.map(function (col) {
                    return col.title;
                }).join(',')];
                fields = [{ field: 'media' }, { field: 'name' }];
                [/*'request', */'impression', 'click', 'ctr', 'cpm', 'income', 'channel_income', 'media_income'].reverse().forEach(function (n) {
                    fields.unshift({ content: function (item) {
                        return Math.round(+item[n] * 100) / 100;
                    } });
                });
                exportData = exportData.concat(exportList.map(function (row, rowIndex) {
                    return fields.map(function (col, colIndex) {
                        return typeof col.content === 'function' ? col.content(row, rowIndex, colIndex) : (col.content || row[col.field]);
                    }).join(',');
                }));
                mf.m.download.fileCSV(model.get('name') + '_数据报表' + esui.get('dailyChannelDateRegion').value, exportData.join('\n'));
            };

            mf.mockPager(data, {
                table: esui.get('dailyChannelList')
            }, {
                afterSort: function (dataList, targets, opt) {
                    total && (targets.table.datasource || []).unshift(total);
                }
            })();
        },
        onleave: function () {
            console.log('onleave');
            var action = this;
            var model = action.model;
            var commands = action.model.get('commands');
            commands && mf.clickCommand.dispose(commands);

        }
    });
})();