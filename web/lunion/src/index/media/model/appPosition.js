/**
 * @file Generated by er-sync
 * @author killeryyl<longgeyang@jesgoo.com>
 * @date Thu Apr 09 2015 10:53:19 GMT+0800 (CST)
 * Copyright (c) 2015 jesgoo.com, Inc. All Rights Reserved
 */
(function () {
    var FIELDS = function (model, config) {
        var lists = config.lists.appPositionList;
        var operateData = mf.operateDataInConfigField(lists);
        var listFieldInConfig = mf.mockFieldInConfig(lists);
        var needFieldLists = {
            'id': {
                stable:1,
                width: 80
                /*content: function (item, index) {
                 return '<a data-cmd="edit" data-index="' + index + '">' + operateData.get(item, 'id', '') + '</a>'
                 }*/
            },
            'media': {},
            'modifyTime': {},
            'name': {
                width: 120,
                validator: function (value, item) {
                    return (!value || value.length < 3) && '名称长度不能少于2位';
                }
                //breakLine: 1
                /*content: function (item, index) {
                 return '<a data-cmd="edit" data-index="' + index + '">' + operateData.get(item, 'name', '') + '</a>'
                 }*/
            },
            'type': {
                width: 120,
                subEntry:1,
                isSubEntryShow: function (item, index, col) {
                    return !item._isNew && operateData.get(item, 'type') === config.maps.appPositionType.banner;
                },
                editable: function (item, index, col) {
                    return !!item._isNew;
                },
                datasource: config.maps.appPositionTypeMap,
                content: function (item) {
                    var r = mf.m.utils.deepSearch('children', config.maps.appPositionTypeMap,
                        operateData.get(item, 'type'), 'value', 0);
                    return r ? r.name || '-' : '-';
                }
            },
            'operation': {
                stable: 1,
                width: 96,
                title: '操作',
                content: function (item, index) {
                    var ops = [];
                    if (item._isModify) {
                        ops.unshift('<a data-cmd="save" data-index="' + index + '">保存</a>');
                    }
                    /* else if (!item._isNew) {
                     ops.unshift('<a data-cmd="edit" data-index="' + index + '">修改</a>');
                     }*/
                    if (item._isNew) {
                        ops.unshift('<a data-cmd="delete_add" data-index="' + index + '">删除</a>');
                    } else {
                        ops.unshift('<a data-cmd="copy" data-index="' + index + '">复制</a>');
                    }
                    return ops.join('&nbsp;');
                }
            }
        };
        return mf.mockTableFields(needFieldLists, lists);
    };
    mf.index.media.model.appPosition = new er.Model({
        QUERY_MAP: {
            media: 'appId'
        },
        LOADER_LIST: ['modelLoader'],
        modelLoader: new er.Model.Loader(function () {
            console.log('modelLoader');
            var loader = this;

            loader.stop();
            mf.parallelAjax([
                {
                    url: '/config',
                    cache: true
                },
                '/adslot' + '?' + loader.getQueryString()
            ], function (config, adslots) {
                mf.initEntities({
                    loader: loader,
                    entities: adslots,
                    fields: FIELDS(adslots, config)
                });
                loader.set('config', config);
                loader.set('appPositionList', config.lists.appPositionList);
                loader.set('appPositionCount', adslots.length);
                loader.start();
            });
        })
    });
})();