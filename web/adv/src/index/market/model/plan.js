/**
 * @file Generated by er-sync
 * @author Luics<xukai01@baidu.com>
 * @date Tue May 26 2015 14:24:38 GMT+0800 (CST)
 * Copyright (c) 2012 Baidu.com, Inc. All Rights Reserved
 */
(function () {
    var FIELDS = function (model, config) {
        var lists = config.lists.planList;
        var operateData = mf.operateDataInConfigField(lists);
        var needFieldLists = {
            'id': {
                stable:1,
                width: 80,
                content: function (item, index) {
                    return '<a data-cmd="unit" data-index="' + index + '">' + operateData.get(item, 'id', '') + '</a>'
                }
            },
            'name': {
                content: function (item, index) {
                    if (operateData.get(item, 'id')) {
                        return '<a data-cmd="unit" data-index="' + index + '">' + operateData.get(item, 'name', '') + '</a>';
                    } else {
                        return operateData.get(item, 'name');
                    }
                }
            },
            'status': {
                datasource: config.maps.planStatusTypeMap.filter(function (n) { return n.value !== config.maps.planStatusType.overflow; }),
                content: function (item) {
                    var r = mf.m.utils.deepSearch('children', config.maps.planStatusTypeMap, operateData.get(item, 'status'), 'value', 0);
                    return r ? r.name || '-' : '-';
                }
            },
            'budget': {
                content: function (item) {
                    return mf.getEnglishNumber(operateData.get(item, 'budget', 0));
                },
                validator: function (value, item) {
                    return (!value || value < 0) && '预算不能少于0';
                }
            },
            'validDate': {
                stable:1,
                width: 150,
                content: function (item) {
                    return operateData.get(item, 'validDate', '').replace(',', ' - ') || '-';
                },
                validator: function (value, item) {
                    return !value && '请选择有效的投放日期';
                }
            },
            'modifyTime': {
                stable:1,
                width: 130
            },
            'operation': {
                title: '操作',
                stable:1,
                width: 80,
                content: function (item, index) {
                    var ops = [];
                    if (item._isModify) {
                        ops.unshift('<a data-cmd="save" data-index="' + index + '">保存</a>');
                    }
                    if (item._isNew) {
                        ops.unshift('<a data-cmd="delete_add" data-index="' + index + '">删除</a>');
                    } else {
                        ops.unshift('<a data-cmd="copy" data-index="' + index + '">复制</a>');
                    }
                    return ops.join('&nbsp;');
                }
            }
        };
        return mf.mockTableFields(needFieldLists, lists);
    };
    mf.index.market.model.plan = new er.Model({
        QUERY_MAP: {},
        LOADER_LIST: ['modelLoader'],
        modelLoader: new er.Model.Loader(function () {
            console.log('modelLoader');
            var loader = this;
            loader.stop();

            mf.parallelAjax([
                {
                    url: '/config',
                    cache: true
                },
                '/plan'
            ], function (config, entities) {

                mf.setValueEntities(config.lists.planList, entities);
                mf.initEntities({
                    loader: loader,
                    entities: entities,
                    fields: FIELDS(entities, config)
                });
                loader.set('config', config);
                loader.set('planList', config.lists.planList);
                loader.set('planCount', entities.length);
                loader.start();
            });
        })
    });
})();