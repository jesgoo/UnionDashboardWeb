/**
 * @file Generated by er-sync
 * @author killeryyl<longgeyang@jesgoo.com>
 * @date Wed Jun 03 2015 16:56:54 GMT+0800 (CST)
 * Copyright (c) 2015 jesgoo.com, Inc. All Rights Reserved
 */
(function () {
    var dspName = mf.m.config.maps.dspName;
    var statusTypes = [
        {
            "name": "有效",
            "value": 0
        },
        {
            "name": "无效",
            "value": 1
        }
    ];
    var FIELDS = function (model) {
        var needFieldLists = {
            id: {
                sortable: true,
                stable: 1,
                width: 150,
                title: '键',
                field: 'id',
                edittype: 'string',
                editable: function (item) {
                    return !!item._isNew;
                },
                validator: function (value) {
                    if (!value) {
                        return '不能为空！';
                    }
                }
            },
            status: {
                sortable: true,
                stable: 1,
                width: 100,
                title: '状态',
                field: 'status',
                editable: function (item) {
                    return item.id !== 'global';
                },

                edittype: 'select',
                datasource: statusTypes,
                content: function (item) {
                    var r = mf.m.utils.deepSearch('children', statusTypes, item.status, 'value');
                    return r ? r.name : '-';
                }
            },
            comment: {
                title: '备注',
                stable: 1,
                width: 200,
                field: 'comment',
                edittype: 'string',
                editable: true
            },
            rules: {
                stable: 1,
                width: 100,
                title: '规则',
                content: function (item, index) {
                    return '<a data-cmd="edit-data" data-index="' + index + '">' +
                           (item.data && item.data.data && item.data.data.length
                            ? item.data.data.length + '条' : '无') + '</a>';
                }
            },
            modified_time: {
                title: '修改时间',
                sortable: true,
                field: 'modified_time'
            },
            operation: {
                stable: 1,
                width: 96,
                title: '操作',
                content: function (item, index) {
                    var ops = [];
                    if (item._isModify) {
                        ops.unshift('<a data-cmd="save" data-index="' + index + '">保存</a>');
                    }
                    if (item._isNew) {
                        ops.unshift('<a data-cmd="delete_add" data-index="' + index + '">删除</a>');
                    }
                    return ops.join('&nbsp;') || '-';
                }
            }
        };
        return mf.mockTableFields(needFieldLists, {});
    };
    var DATA_FIELDS = function (model) {
        var needFieldLists = {
            index: {
                title: '序号',
                stable: 1,
                width: 60,
                content: function (item, index) {
                    return (index + 1);
                }
            },
            rules: {
                title: '触发规则',
                breakLine: 1,
                content: function (item, index) {
                    return '<a data-cmd="edit-rule" data-index="' + index + '">' + (item.rules && item.rules.length
                            ? item.rules.length + '条' : '无') + '</a>';
                }
            },
            result: {
                title: '结果分配',
                breakLine: 1,
                content: function (item, index) {
                    return '<a data-cmd="edit-result" data-index="' + index + '">' + (item.result && item.result.length
                            ? item.result.length + '条' : '无') + '</a>';
                }
            },
            operation: {
                stable: 1,
                width: 96,
                title: '操作',
                content: function (item, index) {
                    var ops = [];
                    ops.unshift('<a data-cmd="copy-data" data-index="' + index + '">复制</a>');
                    ops.unshift('<a data-cmd="delete-data" data-index="' + index + '">删除</a>');
                    return ops.join('&nbsp;');
                }
            }
        };
        return mf.mockTableFields(needFieldLists, {});
    };
    var RULE_FIELDS = function (model) {
        var needFieldLists = {
            index: {
                title: '序号',
                stable: 1,
                width: 60,
                content: function (item, index) {
                    return (index + 1);
                }
            },
            key: {
                title: '键',
                field: 'key',
                edittype: 'string',
                editable: true
            },
            value: {
                title: '值',
                field: 'value',
                edittype: 'string',
                editable: true
            },
            operation: {
                stable: 1,
                width: 96,
                title: '操作',
                content: function (item, index) {
                    var ops = [];
                    ops.unshift('<a data-cmd="delete-rule" data-index="' + index + '">删除</a>');
                    return ops.join('&nbsp;');
                }
            }
        };
        return mf.mockTableFields(needFieldLists, {});
    };
    var RESULT_FIELDS = function (model) {
        var needFieldLists = {
            index: {
                title: '序号',
                stable: 1,
                width: 60,
                content: function (item, index) {
                    return (index + 1);
                }
            },
            percent: {
                title: '分配千分比',
                field: 'percent',
                edittype: 'int',
                editable: true,
                validator: function (value) {
                    value = +value;
                    return value < 0 || value > 1000 ? '值超过范围：［ 0 - 1000 ］' : undefined;
                }
            },
            firstDspInfo: {
                title: '首触发分配',
                content: function (item, index) {
                    return '<a data-cmd="edit-info" data-field="firstDspInfo" data-index="' + index + '">' + (item.firstDspInfo && item.firstDspInfo.length
                            ? item.firstDspInfo.length + '条' : '无') + '</a>';
                }
            },
            secondDspInfo: {
                title: '次触发分配',
                content: function (item, index) {
                    return '<a data-cmd="edit-info" data-field="secondDspInfo" data-index="' + index + '">' + (item.secondDspInfo && item.secondDspInfo.length
                            ? item.secondDspInfo.length + '条' : '无') + '</a>';
                }
            },
            operation: {
                stable: 1,
                width: 96,
                title: '操作',
                content: function (item, index) {
                    var ops = [];
                    ops.unshift('<a data-cmd="delete-result" data-index="' + index + '">删除</a>');
                    return ops.join('&nbsp;');
                }
            }
        };
        return mf.mockTableFields(needFieldLists, {});
    };
    var INFO_FIELDS = function (model) {
        var needFieldLists = {
            index: {
                title: '序号',
                stable: 1,
                width: 60,
                content: function (item, index) {
                    return (index + 1);
                }
            },
            dspid: {
                datasource: dspName,
                title: 'dsp',
                field: 'dspid',
                edittype: 'select',
                editable: true,
                content: function (item) {
                    var r = mf.m.utils.deepSearch('children', dspName, item.dspid, 'value');
                    return r ? r.name || '-' : '-';
                }
            },
            dspPercent: {
                title: '分配千分比',
                field: 'dspPercent',
                edittype: 'int',
                editable: true,
                validator: function (value) {
                    value = +value;
                    return value < 0 || value > 1000 ? '值超过范围：［ 0 - 1000 ］' : undefined;
                }
            },
            dspCpm: {
                title: 'cpm',
                field: 'dspCpm',
                edittype: 'int',
                editable: true,
                validator: function (value) {
                    value = +value;
                    return value < 0 || value > 1000 ? '值超过范围：［ 0 - 1000 ］' : undefined;
                }
            },
            operation: {
                stable: 1,
                width: 96,
                title: '操作',
                content: function (item, index) {
                    var ops = [];
                    ops.unshift('<a data-cmd="delete-info" data-index="' + index + '">删除</a>');
                    return ops.join('&nbsp;');
                }
            }
        };
        return mf.mockTableFields(needFieldLists, {});
    };
    mf.admin.manage.model.strategy = new er.Model({
        QUERY_MAP: {},
        LOADER_LIST: ['modelLoader'],
        modelLoader: new er.Model.Loader(function () {
            console.log('modelLoader');
            var loader = this;

            loader.stop();
            mf.parallelAjax([
                '/dspstrategy'
            ], function (strategies) {
                mf.initEntities({
                    loader: loader,
                    entities: strategies,
                    fields: FIELDS(strategies)
                });
                loader.set('strategyCount', strategies.length);
                loader.set('dataFields', DATA_FIELDS());
                loader.set('ruleFields', RULE_FIELDS());
                loader.set('resultFields', RESULT_FIELDS());
                loader.set('infoFields', INFO_FIELDS());
                loader.start();
            });
        })
    });
})();