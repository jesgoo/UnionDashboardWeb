/**
 * @file Generated by er-sync
 * @author killeryyl<longgeyang@jesgoo.com>
 * @date Fri Oct 16 2015 11:16:08 GMT+0800 (CST)
 * Copyright (c) 2015 jesgoo.com, Inc. All Rights Reserved
 */
(function () {
    mf.admin.manage.adslotDSPID = new er.Action({
        model: mf.admin.manage.model.adslotDSPID,
        view: new er.View({
            template: 'mf_admin_manage_adslotDSPID',
            UI_PROP: {}
        }),
        STATE_MAP: {
            page: 0,
            pageSize: mf.PAGER_MODEL.pageSize,
            pageSizes: mf.PAGER_MODEL.pageSizes
        },

        onenter: function () {
            console.log('onenter');
            mf.onenter();
        },
        onafterrender: function () {
            console.log('onafterrender');
            mf.loaded();
            var action = this;
            var model = action.model;
            var dataList = model.get('list');
            var config = model.get('config');
            var adslotDSPList = model.get('adslotDSPList');
            var DSPFieldInConfig = mf.mockFieldInConfig(adslotDSPList);
            var operateData = mf.operateDataInConfigField(adslotDSPList);
            var emptyDSP = mf.initEntityInConfig(adslotDSPList);

            var table = esui.get('list');
            table.order = 'asc';
            table.orderBy = DSPFieldInConfig('id');

            var saveRow = function (rowIndex) {
                var row = table.datasource[rowIndex];
                if (mf.tableSavingValidator(row, table.fields)) {
                    mf.parallelAjax({
                        type: 'POST',
                        url: '/admin/adslotdsp' + (
                            row._isNew ? '' : '/' + operateData.get(row, 'id')
                             + '/' + operateData.get(row, 'dsp_type')
                             + '/' + operateData.get(row, 'platform')),
                        data: mf.grepDataInConfig(row, adslotDSPList)
                    }, function (result) {
                        var newData = result[0];
                        if (row._isNew) {
                            dataList.unshift(newData);
                        } else {
                            var idField = DSPFieldInConfig('id');
                            var index = mf.m.utils.indexOfArray(dataList, row[idField], idField);
                            index > -1 && (dataList[index] = newData);
                        }
                        table.datasource[rowIndex] = newData;
                        table.render();
                    });
                } else {
                    return false;
                }
            };
            var refreshTable = mf.mockPager(dataList, {
                pager: esui.get('pager'),
                pageSizer: esui.get('pageSize'),
                table: table
            }, {
                editToSave: function (value, options, editor) {
                    var row = table.datasource[options.rowIndex];
                    if (!row._isNew) {
                        return saveRow(options.rowIndex);
                    }
                }
            });
            refreshTable();
            var selectDSPID = esui.get('selectDSPID');
            var selectAction, selectRowIndex, selectField;
            action.subAction = {};
            selectDSPID.oncommand = function (opt) {
                var index = opt.index;
                if (index == 0) {
                    var row = table.datasource[selectRowIndex];
                    var selectID = selectAction.getSelectedResource();
                    $('#DSPIDError').html('请选择一个DSPID');
                    if (!selectID) return false;
                    operateData.set(row, selectField, selectID);
                    if (!row._isNew) {
                        return saveRow(selectRowIndex);
                    }
                }
            };
            model.set(
                'commands',
                mf.clickCommand.register(
                    [
                        {
                            cmd: 'delete_dsp',
                            handle: function (options) {
                                selectRowIndex = options.index;
                                var row = table.datasource[selectRowIndex];
                                operateData.set(row, options.field, null);
                                if (!row._isNew) {
                                    return saveRow(selectRowIndex);
                                } else {
                                    table.render();
                                }
                            }
                        },
                        {
                            cmd: 'set_dsp',
                            handle: function (options) {
                                selectField = options.field;
                                selectRowIndex = options.index;
                                var row = table.datasource[selectRowIndex];
                                if (action.subAction[selectField]) {
                                    action.subAction[selectField].leave();
                                    action.subAction[selectField] = null;
                                }
                                selectAction = action.subAction[selectField] = er.controller.loadSub(
                                    selectDSPID.getBody().id,
                                    'mf.admin.manage.' + selectField + 'DSP',
                                    {
                                        queryMap: {
                                            selectedResource: operateData.get(row, selectField),
                                            listing: true
                                        }
                                    }
                                );
                                selectDSPID.show();
                                $('#DSPIDError').html('');
                            }
                        },
                        {
                            cmd: 'search',
                            handle: function (options) {
                                var text = esui.get('adslotID').getValue();
                                var filter;
                                if (text) {
                                    var valueRegExp = mf.m.utils.makeRegExp(text, 'i');
                                    filter = function (obj) {
                                        return valueRegExp.test(operateData.get(obj, 'id'))
                                               || valueRegExp.test(operateData.get(obj, 'baidu'))
                                               || valueRegExp.test(operateData.get(obj, 'tencent'))
                                               || valueRegExp.test(operateData.get(obj, 'baidu5'));
                                    };
                                }
                                refreshTable({
                                    page: 0,
                                    filter: filter
                                });
                            }
                        },
                        {
                            cmd: 'add',
                            handle: function (options) {
                                var newRow = $.deepExtend({}, emptyDSP);
                                newRow = mf.grepDataInConfig(newRow, adslotDSPList);
                                newRow._isNew = true;
                                table.datasource = table.datasource || [];
                                table.datasource.unshift(newRow);
                                table.render();
                            }
                        },
                        {
                            cmd: 'delete_add',
                            handle: function (options) {
                                table.datasource.splice(options.index, 1);
                                table.render();
                            }
                        },
                        {
                            cmd: 'save',
                            handle: function (options) {
                                return saveRow(options.index);
                            }
                        },
                        {
                            cmd: 'copy',
                            handle: function (options) {
                                var row = table.datasource[options.index];
                                var newRow = $.deepExtend({}, emptyDSP, row);
                                newRow = mf.grepDataInConfig(newRow, adslotDSPList);
                                newRow._isModify = true;
                                newRow._isNew = true;
                                table.datasource.unshift(newRow);
                                table.render();
                            }
                        }
                    ],
                    {
                        region: '#' + action.view.target,
                        rewrite: true
                    }
                )
            );
        },
        onleave: function () {
            console.log('onleave');
            var action = this;
            $.each(action.subAction || {}, function (name, subAction) {
                subAction && subAction.leave();
            });
            action.subAction = null;

            var commands = action.model.get('commands');
            commands && mf.clickCommand.dispose(commands);
        }
    });
})();