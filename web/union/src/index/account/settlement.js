/**
 * @file Generated by er-sync
 * @author killeryyl<longgeyang@jesgoo.com>
 * @date Mon Sep 07 2015 13:21:21 GMT+0800 (CST)
 * Copyright (c) 2015 jesgoo.com, Inc. All Rights Reserved
 */
(function () {
    mf.index.account.settlement = new er.Action({
        model: mf.index.account.model.settlement,
        view: new er.View({
            template: 'mf_index_account_settlement',
            UI_PROP: {}
        }),
        STATE_MAP: {},

        onenter: function () {
            console.log('onenter');
            mf.onenter();
        },
        onafterrepaint: function () {
            console.log('onafterrepaint');
        },
        onafterrender: function () {
            console.log('onafterrender');
        },
        onentercomplete: function () {
            console.log('onentercomplete');
            mf.loaded();
            var action = this;
            var model = action.model;
            var table = esui.get('list');
            var saveRow = function (rowIndex) {
                var row = table.datasource[rowIndex];
                if (row.status === 2) {
                    mf.parallelAjax({
                        type: 'POST',
                        url: '/withdraw',
                        data: {
                            date: row.date
                        }
                    }, function (result) {
                        row.status = 3;
                        table.render();
                    });
                } else {
                    return false;
                }
            };
            action.subAction = {};
            table.onsubrowopen =mf.m.utils.nextTickWrapper(function(index, item) {
                var me = this;
                var subRow = me.getSubrow(index);
                console.log('open subrow', subRow);
                if (action.subAction[index]) {
                    action.subAction[index].leave();
                }
                action.subAction[index] = er.controller.loadSub(
                    subRow.id,
                    'mf.index.account.discountList',
                    {
                        queryMap: {
                            date: item.date,
                            list: item.discount
                        }
                    }
                );
            });
            table.onsubrowclose = function(index) {
                var subAction = action.subAction[index];
                if (subAction && subAction.leave) {
                    subAction.leave();
                    action.subAction[index] = null;
                }
            };
            model.set(
                'commands',
                mf.clickCommand.register(
                    [
                        {
                            cmd: 'withdraw',
                            handle: function (options) {
                                var row = table.datasource[options.index];
                                console.log('here', options.index, row);
                                esui.Dialog.confirm({
                                    title: '提现',
                                    content: '确认提现 ' + mf.getFieldContentMoney('income')(row) + ' ?',
                                    onok: saveRow.bind(window, options.index)
                                });
                            }
                        }
                    ],
                    {
                        region: '#' + action.view.target,
                        rewrite: true
                    }
                )
            );
        },
        onleave: function () {
            console.log('onleave');
            var action = this;
            $.each(action.subAction || {}, function (index, subAction) {
                if (subAction && subAction.leave) {
                    subAction.leave();
                }
            });
            action.subAction = null;
            var commands = action.model.get('commands');
            commands && mf.clickCommand.dispose(commands);
        }
    });
})();