/**
 * @file Generated by er-sync
 * @author killeryyl<longgeyang@jesgoo.com>
 * @date Tue Mar 17 2015 23:01:23 GMT+0800 (CST)
 * Copyright (c) 2015 jesgoo.com, Inc. All Rights Reserved
 */
(function () {
    mf.index.account.password = new er.Action({
        model: mf.index.account.model.password,
        view: new er.View({
            template: 'mf_index_account_password',
            UI_PROP: {}
        }),
        STATE_MAP: {},

        onenter: function () {
            console.log('onenter');
            mf.onenter();
        },
        onafterrender: function () {
            console.log('onafterrender');
            mf.loaded();
            var action = this;
            /*-- 获取ESUI控件 START --*/
            var oldpassword = esui.get('oldpassword');
            var newpassword = esui.get('newpassword');
            var newpassword2 = esui.get('newpassword2');

            var confirm = esui.get('confirm');
            var cancel = esui.get('cancel');
            /*-- 获取ESUI控件 END --*/
            /*-- 绑定事件 START --*/
            cancel.onclick = function () {
                window.location.href = 'index.html#/index/main';
            };
            confirm.onclick = function () {
                var newpasswordValue = newpassword.getValue();
                var newpassword2Value = newpassword2.getValue();
                var oldpasswordValue = oldpassword.getValue();

                var rule = [
                    {
                        msgContainerId: 'oldpasswordError',
                        value: oldpasswordValue,
                        targetValue: '',
                        valueRelation: '===',
                        showMsg: '值不能为空'
                    },
                    {
                        msgContainerId: 'newpasswordError',
                        value: newpasswordValue,
                        targetValue: '',
                        valueRelation: '===',
                        showMsg: '值不能为空'
                    },
                    {
                        msgContainerId: 'newpassword2Error',
                        value: newpasswordValue,
                        targetValue: newpassword2Value,
                        valueRelation: '!==',
                        showMsg: '新密码两次输入不一致'
                    }
                ];

                if (validate(rule)) {
                    return false;
                } else {
                    mf.loading();
                    mf.parallelAjax(
                        {
                            url: '/user',
                            type: 'POST',
                            data: {
                                password: newpasswordValue
                            }
                        },
                        function (result) {
                            esui.Dialog.alert({
                                title: '操作提示',
                                content: '密码修改成功'
                            });
                            oldpassword.setValue('');
                            newpassword.setValue('');
                            newpassword2.setValue('');
                        }
                    ).fail(function () {
                            esui.Dialog.alert({
                                title: '操作提示',
                                content: '密码修改失败'
                            });
                        });
                }
            };
            /*-- 绑定事件 END --*/
            function validate(rule) {

                var length = rule.length;
                var isShow = false;

                for (var i = 0; i < length; i++) {
                    var item = rule[i];
                    var container = document.getElementById(item.msgContainerId);
                    container.innerHTML = '';
                    var result = (new Function('return \'' +
                                               item.value + '\' ' +
                                               item.valueRelation +
                                               ' \'' + item.targetValue +
                                               '\';'))();

                    if (result) {
                        isShow = true;
                        container.innerHTML = item.showMsg;
                    }
                }
                return isShow;
            }
        }
    });
})();