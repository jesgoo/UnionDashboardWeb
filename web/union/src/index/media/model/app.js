/**
 * @file Generated by er-sync
 * @author Luics<xukai01@baidu.com>
 * @date Tue Mar 17 2015 09:45:32 GMT+0800 (CST)
 * Copyright (c) 2012 Baidu.com, Inc. All Rights Reserved
 */
(function () {
    var FIELDS = function (model, config) {
        var lists = config.lists.appMediaList;
        var listFieldInConfig = mf.mockFieldInConfig(lists);
        var needFieldLists = {
            'id': {
                /*content: function (item, index) {
                    return '<a data-cmd="position" data-index="' + index + '">' + item[listFieldInConfig('id')] + '</a>'
                }*/
            },
            'name': {},
            'note': {},
            'createTime': {
                width: 100
            },
            'modifyTime': {
                width: 100
            },
            'operation': {
                title: '操作',
                content: function (item, index) {
                    var ops = [];
                    if (item._isModify) {
                        ops.unshift('<a data-cmd="save" data-index="' + index + '">保存</a>');
                    }
                    if (item._isNew) {
                        ops.unshift('<a data-cmd="delete_add" data-index="' + index + '">撤销新增</a>');
                    } else {
                        ops.unshift('<a data-cmd="copy" data-index="' + index + '">复制</a>');
                    }
                    return ops.join('&nbsp;');
                }
            }
        };
        return mf.mockTableFields(needFieldLists, lists);
    };

    mf.index.media.model.app = new er.Model({
        QUERY_MAP: {},
        LOADER_LIST: ['modelLoader'],
        modelLoader: new er.Model.Loader(function () {
            console.log('modelLoader');
            var loader = this;
            loader.stop();

            mf.parallelAjax([
                {
                    url: 'index/config',
                    cache: true
                },
                'index/media/app?' + loader.getQueryString()
            ], function (config, data) {
                console.log('success', config, data);
                mf.initModel({
                    loader: loader,
                    model: data,
                    fields: FIELDS(data, config)
                });
                var emptySiteMedia = {
                    _isNew: true
                };
                var appMediaList = config.lists.appMediaList;
                $.each(appMediaList, function (i, n) {
                    emptySiteMedia[n.field] = n.defaultValue;
                });
                loader.set('emptySiteMedia', emptySiteMedia);
                loader.set('appMediaList', appMediaList);
                loader.set('appMediaCount', loader.get('list').length);
                loader.start();
            });
        })
    });
})();