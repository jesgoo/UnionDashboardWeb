/**
 * @file Generated by er-sync
 * @author Luics<xukai01@baidu.com>
 * @date Tue Mar 17 2015 09:45:32 GMT+0800 (CST)
 * Copyright (c) 2012 Baidu.com, Inc. All Rights Reserved
 */
(function () {
    function saveAppMedia(data) {
        var def = $.Deferred();
        mf.parallelAjax({
            method: 'POST',
            url: 'index/media/appUpdate'/* + (data.id ? '/' + data.id : '')*/,
            data: data
        }, function (result) {
            def.resolve(result)
        });
        return def.promise();
    }

    mf.index.media.app = new er.Action({
        model: mf.index.media.model.app,
        view: new er.View({
            template: 'mf_index_media_app',
            UI_PROP: {
                list: {
                    order: 'asc',
                    orderBy: 'id'
                }
            }
        }),
        STATE_MAP: {
            page: 0,
            pageSize: mf.PAGER_MODEL.pageSize,
            pageSizes: mf.PAGER_MODEL.pageSizes
        },

        onenter: function () {
            console.log('onenter');
            mf.onenter();
        },
        onafterrepaint: function () {
            console.log('onafterrepaint');
        },
        onafterrender: function () {
            console.log('onafterrender');
        },
        onentercomplete: function () {
            console.log('onentercomplete');
            mf.loaded();
            var action = this;
            var model = action.model;
            var table = esui.get('list');
            var pager = esui.get('pager');
            var pageSizer = esui.get('pageSize');
            var popupsCount = esui.get('popupsCount');
            var appMediaCount = esui.get('appMediaCount');
            var dataList = model.get('list');
            var appMediaList = model.get('appMediaList');
            var appMediaListField = mf.mockFieldInConfig(appMediaList);
            table.onedit = function (value, options, editor) {
                var row = table.datasource[options.rowIndex];
                row[options.field.field] = value;
                row._isModify = true;
                table.render();
            };
            var refreshTable = mf.mockPager(dataList, {
                pager: pager,
                pageSizer: pageSizer,
                table: table
            });
            pager.onchange = function () {
                refreshTable();
            };
            pageSizer.onchange = function () {
                refreshTable({
                    page: 0
                });
            };
            table.onsort = function () {
                refreshTable({
                    page: 0
                });
            };
            refreshTable();
            model.set(
                'commands',
                mf.clickCommand.register(
                    [
                        {
                            cmd: 'search',
                            handle: function (options) {
                                var text = esui.get('appMediaId').getValue();
                                var filter;
                                if (text) {
                                    filter = function (obj) {
                                        return String(obj[searchField]).indexOf(text) > -1;
                                    }
                                }
                                refreshTable({
                                    page: 0,
                                    filter: filter
                                });
                            }
                        },
                        {
                            cmd: 'add',
                            handle: function (options) {
                                var row = $.extend({}, model.get('emptyAppMedia'));
                                table.datasource = table.datasource || [];
                                table.datasource.unshift(row);
                                table.render();
                            }
                        },
                        {
                            cmd: 'delete_add',
                            handle: function (options) {
                                table.datasource.splice(options.index, 1);
                                table.render();
                            }
                        },
                        {
                            cmd: 'save',
                            handle: function (options) {
                                var row = table.datasource[options.index];
                                if (mf.tableSavingValidator(row, table.fields)) {
                                    saveAppMedia(row).done(function (result) {
                                        $.extend(row, result);
                                        row._isModify = false;
                                        if (row._isNew) {
                                            row._isNew = false;
                                            dataList.unshift(row);
                                            appMediaCount.setContent(dataList.length);
                                        }
                                        table.render();
                                    });
                                }
                            }
                        },
                        {
                            cmd: 'copy',
                            handle: function (options) {
                                var row = table.datasource[options.index];
                                var newRow = $.extend({}, model.get('emptyAppMedia'), row);
                                newRow[sitePositionListField("id")] = '';
                                newRow[sitePositionListField("createTime")] = '';
                                newRow[sitePositionListField("modifyTime")] = '';
                                newRow._isModify = true;
                                newRow._isNew = true;
                                table.datasource.unshift(newRow);
                                table.render();
                            }
                        }/*,
                        {
                            cmd: 'position',
                            handle: function (options) {
                                var row = table.datasource[options.index];
                                var url = '/media/appPosition~' + $.param({
                                        appId: row[appMediaListField('id')],
                                        appName: row[appMediaListField('name')]
                                    });
                                mf.m.utils.nextTick(function () {
                                    er.locator.redirect(url);
                                });
                            }
                        }*/
                    ],
                    {
                        region: '#' + action.view.target,
                        rewrite: true
                    }
                )
            );
        },
        onleave: function () {
            console.log('onleave');
            var commands = this.model.get('commands');
            commands && mf.clickCommand.dispose(commands);
        }
    });
})();