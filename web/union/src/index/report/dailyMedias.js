/**
 * @file Generated by er-sync
 * @author Luics<xukai01@baidu.com>
 * @date Tue Mar 31 2015 10:59:06 GMT+0800 (CST)
 * Copyright (c) 2012 Baidu.com, Inc. All Rights Reserved
 */
(function () {

    mf.index.report.dailyMedias = new er.Action({
        model: mf.index.report.model.dailyMedias,
        view: new er.View({
            template: 'mf_index_report_dailyMedias',
            UI_PROP: {
                dailyMediasDateRegion: {
                    range: mf.index.reportRange
                }
            }
        }),
        STATE_MAP: {
            'dateRegion':  mf.getDateString(mf.getDate(-7)) + ',' +
                           mf.getDateString(mf.getDate(-1))
        },

        onenter: function () {
            console.log('onenter');
            mf.onenter();
        },
        onafterrepaint: function () {
            console.log('onafterrepaint');
        },
        onafterrender: function () {
            console.log('onafterrender');
            var action = this;
            var model = action.model;

            var dateRegion = esui.get('dailyMediasDateRegion');
            dateRegion.onchange = mf.m.utils.nextTickWrapper(function (value, name, index) {
                console.log('date change', name, index);
                mf.subActionRefresh(action, {
                    dateRegion: dateRegion.getValue()
                });
            }, dateRegion);

            var dailyMediasListTable = esui.get('dailyMediasList');
            var dailyMediasDateSelect = esui.get('dailyMediasDateSelect');
            dailyMediasListTable.onsort = mf.m.utils.nextTickWrapper(function (orderField, order) {
                var orderBy = orderField.field;
                order = order == 'asc' ? 1 : -1;
                dailyMediasListTable.datasource.sort(function (a, b) {
                    return a[orderBy] > b[orderBy] ? order : -order;
                });
                dailyMediasListTable.render();
            }, dailyMediasListTable);
            dailyMediasDateSelect.onchange = function (values, value) {
                dailyMediasListTable.datasource = model.get('reportData')[value];
                dailyMediasListTable.onsort({ field: dailyMediasListTable.orderBy }, dailyMediasListTable.order);
            };
        },
        onentercomplete: function () {
            console.log('onentercomplete');
            var dailyMediasDateSelect = esui.get('dailyMediasDateSelect');
            dailyMediasDateSelect.setValue(dailyMediasDateSelect.datasource[0].id, { dispatch: true });
        },
        onleave: function () {
            console.log('onleave');
        }
    });
})();