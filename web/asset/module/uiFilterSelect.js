/**
 * @file Generated by er-sync, module
 * @author Luics<xukai01@baidu.com>
 * @date Fri Mar 07 2014 11:15:21 GMT+0800 (中国标准时间)
 * Copyright (c) 2012 Baidu.com, Inc. All Rights Reserved
 * shortcut mf.m.uiFilterSelect
 */
(function (exports, module) {
    var uiFilterSelect = function (filters, model) {
        for (var item in filters) {
            var filter = filters[item];
            filter.noAllChoice = !!filter.noAllChoice;
            (function (filter, valueField, data, ui) {
                var empty = { value: '', name: '全部' };
                if (!ui[0]) {
                    return null;
                }
                ui[0].datasource = filter.noAllChoice 
                    ? data : [].concat(empty, data);
                ui[0].value = model.get(valueField[0]);
                ui[0].render();
                ui[0].onchange = function (value) {
                    if (ui[1]) {
                        var result = mf.m.utils.indexOfArray(
                            data, value, 'value'
                        );
                        ui[1].datasource = result > -1
                            && data[result].children || [];
                        ui[1].datasource = filter.noAllChoice
                            ? ui[1].datasource 
                            : [].concat(empty, ui[1].datasource);
                        ui[1].render();
                        ui[1].setSelectedIndex(0, true);
                        if (ui[2]) {
                            ui[2].datasource = filter.noAllChoice 
                                ? [] : [empty];
                            ui[2].render();
                            ui[2].setSelectedIndex(0, true);
                        }
                    }
                    model.set(valueField[0], value);
                };

                if (ui[1]) {
                    ui[1].onchange = function (value) {
                        if (ui[2]) {
                            var result = mf.m.utils.indexOfArray(
                                ui[1].datasource, value, 'value'
                            );
                            ui[2].datasource = result > -1 
                                && ui[1].datasource[result].children || [];
                            ui[2].datasource = filter.noAllChoice
                                ? ui[2].datasource 
                                : [].concat(empty, ui[2].datasource);
                            ui[2].render();
                            ui[2].setSelectedIndex(0, true);
                        }
                        model.set(valueField[1], value);
                    };
                }
                if (ui[2]) {
                    ui[2].onchange = function (value) {
                        model.set(valueField[2], value);
                    };
                }
                var selectedIndex = ui[0].selectedIndex;
                var value1 = model.get(valueField[1]);
                var value2 = model.get(valueField[2]);
                ui[0].setSelectedIndex(selectedIndex < 0 
                    ? 0 : selectedIndex, true);
                if (selectedIndex > -1 && ui[1]) {
                    selectedIndex = mf.m.utils.indexOfArray(
                        ui[1].datasource, value1, 'value'
                    );
                    ui[1].setSelectedIndex(
                        selectedIndex < 0 ? 0 : selectedIndex, true
                    );
                    if (selectedIndex > -1 && ui[2]) {
                        selectedIndex = mf.m.utils.indexOfArray(
                            ui[2].datasource, value2, 'value'
                        );
                        ui[2].setSelectedIndex(
                            selectedIndex < 0 ? 0 : selectedIndex, true
                        );
                    }
                }
            })(
                    filter,
                    [].concat(filter.value),
                    [].concat(filter.data),
                    $.map(filter.ui, function (n) {
                        return esui.get(n);
                    })
                );
        }
    };
    exports.uiFilterSelect = uiFilterSelect;
})(mf && mf.m || exports || {}, mf || module);