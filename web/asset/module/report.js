/**
 * @file Generated by er-sync
 * @author Luy<xukai01@baidu.com>
 * @date Thu Dec 06 2012 13:23:38 GMT+0800 (China Standard Time)
 * Copyright (c) 2015 jesgoo.com, Inc. All Rights Reserved
 */

/**
 * 统计报表模块
 */
(function (exports, module) {

    /**
     * Flash默认配置
     *
     * @type {Object}
     */
    var FLASH_DATA = {
        config: {
            x: 80,
            y: 20,
            width: 800, //宽度，此尺寸只针对图表部分，并不包括坐标label、图例等部分
            height: 200, //高度
            widthOffset: 120 //宽度偏移量
        },
        tip: {
            backgroundCornerRadius: 11, //圆角，只对默认样式有效，默认为4
            backgroundColor: 0x0,
            backgroundAlpha: 0.7,
            backgroundGap: 11,
            type: 'multiple', //对item还是对多item:single/multiple
            textStyle: {
                fontFamily: 'Arial',
                color: '#ffffff'
            }    //文本样式，见附text css style
        },
        categoryGrid: [
            {
                //类目轴用，label内容，数组长度需和数据的个数相同，默认为空数组
                data: []
            }
        ],
        valueGrid: [
            //至少包含一个{}，避免无数据时纵轴消失
            {}
        ],
        data: [],
        maConfig: {
            showNum: {
                valueGrid: {},
                data: {
                    type: 'baidu.dv.line.LineGraph', //Graph类型
                    name: '总展示数',
                    lineStyle: {
                        color: 0xe76665,
                        thickness: 1
                    },
                    itemStyles: {
                        normalStyle: {lineColor: 0xe76665, fillColor: 0xe76665},
                        emphasizedStyle: {lineColor: 0xe76665, fillColor: 0xe76665}
                    },
                    maUnit: '',
                    data: []
                }
            },
            clickNum: {
                valueGrid: {},
                data: {
                    type: 'baidu.dv.line.LineGraph', //Graph类型
                    name: '总点击数',
                    lineStyle: {
                        color: 0x728ceb,
                        thickness: 1
                    },
                    itemStyles: {
                        normalStyle: {lineColor: 0x728ceb, fillColor: 0x728ceb},
                        emphasizedStyle: {lineColor: 0x728ceb, fillColor: 0x728ceb}
                    },
                    maUnit: '',
                    data: []
                }
            },
            clickRate: {
                valueGrid: {},
                data: {
                    type: 'baidu.dv.line.LineGraph', //Graph类型
                    name: '点击率',
                    lineStyle: {
                        color: 0x30ba50,
                        thickness: 1
                    },
                    itemStyles: {
                        normalStyle: {lineColor: 0x30ba50, fillColor: 0x30ba50},
                        emphasizedStyle: {lineColor: 0x30ba50, fillColor: 0x30ba50}
                    },
                    maUnit: '%',
                    data: []
                }
            },
            avgClickCost: {
                valueGrid: {},
                data: {
                    type: 'baidu.dv.line.LineGraph', //Graph类型
                    name: '平均每次点击费用',
                    lineStyle: {
                        color: 0xf5970e,
                        thickness: 1
                    },
                    itemStyles: {
                        normalStyle: {lineColor: 0xf5970e, fillColor: 0xf5970e},
                        emphasizedStyle: {lineColor: 0xf5970e, fillColor: 0xf5970e}
                    },
                    maUnit: '元',
                    data: []
                }
            },
            totalCost: {
                valueGrid: {},
                data: {
                    type: 'baidu.dv.line.LineGraph', //Graph类型
                    name: '总消费',
                    lineStyle: {
                        color: 0xe76665,
                        thickness: 1
                    },
                    itemStyles: {
                        normalStyle: {lineColor: 0xe76665, fillColor: 0xe76665},
                        emphasizedStyle: {lineColor: 0xe76665, fillColor: 0xe76665}
                    },
                    maUnit: '元',
                    data: []
                }
            }
        }
    };

    /**
     * Flash默认配置
     */
    var TABLE = [
        '<table cellpadding="0" cellspacing="0">',
        '<tr>',
        '<td align="left" width="35%">#{weekday}</td>',
        '<td><b>￥#{totalCost}</b></td>',
        '<td><b>#{showNum}</b></td>',
        '<td><b>#{clickNum}</b></td>',
        '<td><b>#{clickRate}%</b></td>',
        '<td><b>￥#{avgClickCost}</b></td>',
        '</tr>',
        '<tr>',
        '<td align="left"><b>#{date}</b></td>',
        '<td>总费用</td>',
        '<td>总展示数</td>',
        '<td>总点击数</td>',
        '<td>点击率</td>',
        '<td>平均每次点击费用</td>',
        '</tr>',
        '</table>'
    ].join('');

    var CHKES = 'input[name=flashData]';
    var FLASH_CONTAINER_ID = 'flashContainer';
    var FLASH_SUMMARY_CONTENT_ID = 'flashSummaryContent';

    var report = {};
    /**
     * 统计报表默认列配置
     *
     * @type {Array}
     */
    report.REPORT_FIELDS = [
        {
            title: '日期',
            field: 'date',
            sortable: 1,
            content: 'date'
        },
        {
            title: '总展示数',
            field: 'showNum',
            align: 'right',
            sortable: 1,
            content: 'showNum'
        },
        {
            title: '总点击数',
            field: 'clickNum',
            align: 'right',
            sortable: 1,
            content: 'clickNum'
        },
        {
            title: '点击率',
            field: 'clickRate',
            align: 'right',
            sortable: 1,
            content: function(item) {
                return mf.print(item.clickRate,
                    mf.printFloat(item.clickRate, 2) + '%');
            }
        },
        {
            title: function() {
                return '平均每次点击费用<div ui="type:Tip;arrow:t;skin:help;content:您为广告的每次点击所支付的平均费用金额。平均每次点击费用等于总点击费用除以总点击次数。;"></div>'
            }, //用函数返回的好处是宽度能自适应
            field: 'avgClickCost',
            align: 'right',
            sortable: 1,
            state: 1,
            width: 100,
            content: function(item) {
                return mf.print(item.avgClickCost,
                    mf.printMoney(item.avgClickCost));
            }
        },
        {
            title: '平均每次点击费用',
            field: 'CPC',
            align: 'right',
            sortable: 1,
            content: function(item) {
                return mf.print(item.CPC,
                    mf.printMoney(item.CPC));
            }
        },
        {
            title: function() {
                return '千次展现费用';
            },
            field: 'CPM',
            align: 'right',
            sortable: 1,
            content: function(item) {
                return mf.print(item.CPM,
                    mf.printMoney(item.CPM));
            }
        },
        {
            title: '总消费',
            field: 'totalCost',
            align: 'right',
            sortable: 1,
            content: function(item) {
                return mf.print(item.totalCost,
                    mf.printMoney(item.totalCost));
            }
        },
        {
            title: '地域',
            field: 'regionName',
            align: 'center',
            sortable: 1,
            content: 'regionName'
        },
        {
            title: '一级媒体类别',
            field: 'levelClass1',
            align: 'center',
            sortable: 1,
            content: 'levelClass1'
        },
        {
            title: '二级媒体类别',
            field: 'levelClass2',
            align: 'center',
            sortable: 1,
            content: 'levelClass2'
        },
        {
            title: '媒体',
            field: 'appName',
            align: 'center',
            sortable: 1,
            content: 'appName'
        },
        {
            title: '时段',
            field: 'hour',
            align: 'center',
            sortable: 1,
            content: function(item){
                return item.hour + ':00-' + item.hour + ':59';
            }
        }
    ];
    report.AD_FIELDS = $.map([0, 1, 2, 3, 4], function(n) {
        return report.REPORT_FIELDS[n];
    });

    /**
     * 返回数字型数组中的最大最小值
     *
     * @param {Array.<number>} arr
     * @return {Object}
     */
    var getMinMax = function(arr) {
        var min = Number.MAX_VALUE;
        var max = Number.MIN_VALUE;
        var v;
        for (var i = 0; i < arr.length; ++i) {
            v = arr[i];
            if (v > max) max = v;
            if (v < min) min = v;
        }
        return { min: min, max: max };
    };

    /**
     * 析构图表，Flash模块初始化
     * 首页、统计页
     */
    report.disposeDiagramFlash = function() {
        window.onresize = null;
        window.onFlashLoaded = null;
    };

    /**
     * 统计图表，Flash模块初始化
     * 首页、统计页
     *
     * @param {Object} opt
     * @param {er.Action} opt.action
     */
    report.initDiagramFlash = function(opt) {
        var action = opt.action;
        var model = action.model;
        console.log('initDiagramFlash');
        var diagram = T.swf.getMovie('diagram');

        // 慎用全局事件，应该手工销毁
        window.onresize = function() {
            if (!T.swf.getMovie('diagram')) {// 关注全局事件，单页环境避免冲突
                return;
            }
            console.log('diagram window.onresize');
            report.renderDiagramFlash(model);
        };
        window.onFlashLoaded = function(flashId) {
            console.log('diagram window.onFlashLoaded', flashId);
            report.renderDiagramFlash(model);
        };
        $(CHKES).change(function() {
            report.renderDiagramFlash(model);
        });
        T.swf.create({
            'id': 'diagram',
            'width': '100%',
            'height': '240',
            'ver': '9.0.28',
            'errorMessage': '请下载最新的Flash播放器！',
            'url': 'asset/img/JSLineChart.swf',
            'bgcolor': '#FFFFFF',
            'wmode': 'opaque'
        }, FLASH_CONTAINER_ID);
    };

    /**
     * 统计图表，Flash模块初始化
     * 首页、统计页
     *
     * @param {er.Model} model
     */
    report.renderDiagramFlash = function(model) {
        var $flashContainer = $('#' + FLASH_CONTAINER_ID);
        if (!$flashContainer.length) return;
        var diagram = T.swf.getMovie('diagram');
        var data = T.object.clone(FLASH_DATA);
        data.config.width = $flashContainer.width() - data.config.widthOffset; //85

        // x轴
        var flashList = model.get('flashList');
        var from = model.get('from');
        var i;
        //用于补余的数据不显示x轴
        var isStart = false;
        for (i = 0; i < flashList.length; ++i) {
            var row = flashList[i];
            if (from === row.date) isStart = true;
            data.categoryGrid[0].data.push(isStart ? row.date : '');
        }
        console.log('flashList', flashList, from + '|', data.categoryGrid[0].data);

        // y轴
        $(CHKES + ':checked').each(function(ind, obj) {
            var k = $(obj).val();
            var item = T.object.clone(data.maConfig[k]);
            item.data.valueGridIndex = ind;
            for (i = 0; i < flashList.length; ++i) {
                // 控制浮点数显示精度，需要保持number类型
                item.data.data.push(mf.trimFloat(flashList[i][k], 2));
            }
            var valueGrid = {
                splitNumber: 4,
                showFirstAxisLabel: false,
                axisLabelPower: 9, // 精度
                placement: 'left',
                axisLabel: {// 坐标轴文本标签 
                    show: ind < 1 // 是否显示，默认为true
                }
            };
            var v = getMinMax(item.data.data);
            var min = Math.floor(v.min);
            var max = Math.ceil(v.max);
            if (max > 1 //clickRate情况不处理
                && (max - min) % 4 //防止y轴出现小数
                ) {
                max += 4 - (max - min) % 4;
            }
            // 解决浮点数可能导致label超长问题
            valueGrid.assignedMinValue = min;
            valueGrid.assignedMaxValue = max;
            data.valueGrid[ind] = valueGrid;
            console.log('diagram filter', v, ind, item);

            // tip处理
            for (i = 0; i < flashList.length; ++i) {
                item.data.data[i] = {
                    value: item.data.data[i],
                    tip: mf.f('{0}：{1}{2}', item.data.name, item.data.data[i], item.data.maUnit)
                };
            }
            data.data.push(item.data);
        });
        // 更新数据
        console.log('diagram data', data);
        // FIXME ie6下setData可能为空，为何？
        diagram.setData && diagram.setData(data);
    };

    /**
     * 统计图表，Table模块初始化
     * 首页、统计页
     *
     * @param {er.Model} model
     * @param {string=} [date]
     */
    report.renderDiagramTable = function(model, date) {
        var data = model.get('summary');
        var $short = $('#ctrlmcaldateshortcuttext');
        data.weekday = $short.css('display') === 'none' ? '自定义' : $short.html();
        var from = model.get('from');
        var to = model.get('to');
        data.date = mf.f(from !== to ? '{0} 至 {1}' : '{0}', from, to);
        data.totalCost = mf.printFloat(data.totalCost, 2);
        data.clickRate = mf.print(data.clickRate, mf.printFloat(data.clickRate, 2));// 点击率<1
        data.avgClickCost = mf.print(data.avgClickCost, mf.printFloat(data.avgClickCost, 2));
        //console.log(data, mf.f(TABLE, data));
        $('#' + FLASH_SUMMARY_CONTENT_ID).html(mf.f(TABLE, data));
    };

    /**
     * 初始化Report Model
     *
     * @param {Object} opt
     * @param {er.Model.Loader} opt.loader
     * @param {Array=} opt.fields
     */
    report.initReportModel = function(opt) {
        console.log('initFlashModel', opt);
        var loader = opt.loader;
        var flashList = loader.get('flashList');
        var summary = {
            weekday: '',
            date: loader.get('date'),
            totalCost: 0,
            showNum: 0,
            CPMA: 0,
            clickNum: 0,
            clickRate: 0,
            avgClickCost: 0
        };
        for (var i = 0; i < flashList.length; ++i) {
            var row = flashList[i];
            summary.totalCost += row.totalCost;
            summary.showNum += row.showNum;
            summary.clickNum += row.clickNum;
            summary.CPMA += (row.CPM || 0) * row.showNum / 1000;
        }
        summary.avgClickCost = !summary.clickNum
            ? 0 : mf.printRound((summary.totalCost - summary.CPMA) / summary.clickNum);
        summary.clickRate = !summary.showNum
            ? 0 : mf.printRound(summary.clickNum / summary.showNum * 100);
        loader.set('summary', summary);
    };
    exports.report = report;
})(mf && mf.m || exports || {}, mf || module);