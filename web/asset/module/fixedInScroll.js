/**
 * @file Generated by er-sync, module
 * @author Luics<xukai01@baidu.com>
 * @date Tue Nov 12 2013 11:24:15 GMT+0800 (中国标准时间)
 * Copyright (c) 2012 Baidu.com, Inc. All Rights Reserved
 * 页面滚动时自动固定元素
 * shortcut mf.m.fixedInScroll
 */
(function(exports, module) {
    var uniqueId = 0;
    var fixedInScroll = function(ele, fixedClass, onchange) {
        var opt;
        if ($.isPlainObject(ele)) {
            opt = ele;
            fixedClass = opt.fixedClass;
            ele = opt.ele;
            onchange = opt.onchange;
        }
        var fixedEle = $(ele);
        uniqueId += 1;
        var handleId = uniqueId;
        var response = {
            handleId: handleId,
            dispose: function() {
                $(window).unbind('scroll.fixedEle' + handleId);
                fixedEle.each(function() {
                    $(this).removeClass(fixedClass).data('place').remove();
                    response.onchange && response.onchange.call(this, 'remove');
                });
            },
            onchange: onchange
        };
        if (fixedEle.length) {
            fixedClass = fixedClass || 'fixed-top';
            fixedEle.each(function() {
                var $this = $(this);
                $this.data('top', $this.offset().top);
                $this.data('place', $('<img/>', {
                    'class': 'fixed-top-place',
                    css: {
                        height: $this.height(),
                        width: $this.width(),
                        background: $this.css('background')
                    }
                }));
                $this.data('place').insertAfter($this);
            });
            $(window).bind('scroll.fixedEle' + handleId, function(e) {
                var top = e.target.body.scrollTop || e.target.documentElement.scrollTop;
                fixedEle.each(function() {
                    var $this = $(this);
                    if ($this.data('top') <= top) {
                        $this.addClass(fixedClass);
                        response.onchange && response.onchange.call(this, 'add');
                        $this.data('place').show();
                    }
                    else {
                        $this.removeClass(fixedClass);
                        response.onchange && response.onchange.call(this, 'remove');
                        $this.data('place').hide();
                    }
                })
            });
        }
        return response;
    };
    exports.fixedInScroll = fixedInScroll;
})(mf && mf.m || exports || {}, mf || module);