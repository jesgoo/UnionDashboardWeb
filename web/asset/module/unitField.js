/**
 * @file Generated by er-sync, module
 * @author Luics<xukai01@baidu.com>
 * @date Wed Sep 25 2013 10:42:51 GMT+0800 (中国标准时间)
 * Copyright (c) 2012 Baidu.com, Inc. All Rights Reserved
 * 创意的表格列，指定列名字可获得需要的列对象清单
 * shortcut mf.m.unitField
 * 例如
 * mf.m.unitField(['id'])
 * mf.m.unitField([{id:'id', field:'unitId'}])
 */
(function(exports, module) {
    var consumeTypes;
    var mediaTypes;
    var unitTypes;
    var promoteTypes;
    var statusTypes;
    var userId;
    var base;
    var fields = {
        id: {
            title: 'ID',
            stable: 1, width: 80
        },
        preview: {
            title: '创意预览',
            stable: 1, width: 310,
            content: function(item) {
                item.target = 'unitPreview' + item.id;
                item.scale = 2;
                item.scaleTarget = '#' + er.config.MAIN_ELEMENT_ID;
                setTimeout(function() {
                    mf.m.preview(item);
                }, 0);
                var tplAd = '<div class="rel zm">' +
                    '<div class="preview">' +
                    '<div id="#{target}"></div>' +
                    '{{if h}}<div class="banner-size">#{w} * #{h} ' +
                    '</div>{{/if}}</div>' +
                    '</div>';
                return mf.f(tplAd, item);
            }
        },
        modifyDate: {
            title: '创意修改时间'
        },
        targetUrl: {
            title: '点击链接', stable: 1, width: 180
        },
        groupName: {
            title: '推广单元'
        },
        planName: {
            title: '推广计划'
        },
        addDate: {
            title: '创意添加时间'
        },
        consumeType: {
            title: '计费方式', stable: 1, width: 90
        },
        mediaType: {
            title: '媒体类型', stable: 1, width: 90
        },
        unitType: {
            title: '展现类型', stable: 1, width: 90
        },
        promoteType: {
            title: '推广类型', stable: 1, width: 90
        },
        wallAppName: {
            title: '积分墙包名', stable: 1, width: 100
        },
        unitTypeByKey: {
            field: 'unitTypeKey',
            title: '展现形式',
            content: function(item) {
                return (mf.m.utils.deepSearch('', unitTypes, item.unitTypeKey, 'value') || {}).name || '';
            }
        },
        promoteTypeByKey: {
            field: 'promoteTypeKey',
            title: '推广方式',
            content: function(item) {
                return (mf.m.utils.deepSearch('', promoteTypes, item.promoteTypeKey, 'value') || {}).name || '';
            }
        },
        status: {
            title: '状态', stable: 1, width: 105
        },
        showNum: {
            title: '展现', stable: 1, width: 160
        },
        clickNum: {
            title: '点击', stable: 1, width: 160
        },
        clickRate: {
            title: '转化', stable: 1, width: 60
        },
        clickRateCent: {
            title: '点击率', field: 'clickRate',
            stable: 1, width: 70,
            content: function(item) {
                return mf.trimFloat(item.clickRate) + '%';
            }
        },
        phoneCallNum: {
            title: '电话'
        },
        bid: {
            title: '出价', stable: 1, width: 71
        },
        budget: {
            title: '投放预算', stable: 1, width: 90
        },
        avgClickCost: {
            title: '平均点击价格', stable: 1, width: 120
        },
        secondStatus: {
            title: '二次确认',
            content: function(item) {
                return item.hasSecond ? '开启' : '关闭';
            }
        },
        filterStatus: {
            title: '包名过滤',
            content: function(item) {
                return item.hasFilter ? '开启' : '关闭';
            }
        },
        detail: {
            title: '详细信息',
            content: function(item) {
                return base.getDetailHTML(item);
            }
        },
        totalCost: {
            title: '总消费', field: 'totalCost',
            content: function(item) {
                return mf.printMoney(item.totalCost);
            }
        },
        advertType: {
            title: '推广位',
            stable: 1, width: 105
        },
        deviceType: {
            title: '投放设备',
            stable: 1, width: 105
        }
    };
    /**
     * @param {Array.Object | Array.String} list
     * 取值的列表，若为字符数组则按名称拿取
     * 若为对象数组，则按对象里的id属性拿取，且对象内的其他属性会增量覆盖所获得的字段
     * */

    var unitField = function(list, alignMode) {
        alignMode = alignMode || 'center';
        var fieldList = [];
        $.each([].concat(list), function(i, n) {
            var field;
            var id = n;
            if ($.isPlainObject(n)) {
                field = $.extend({}, fields[n.id], n);
                id = field.id;
                delete field.id;
            }
            else field = fields[n];
            if (field) {
                field.field = field.field || id;
                field.content = field.content || id;
                field.align = field.align || alignMode;
                fieldList.push(field);
            }
        });
        /**
         * @param {Object} model er.Model实例， 若无则默认使用mf.m.model
         * 此处传入的model会修改各个types以供使用
         * */
        return function(model) {
            model = model || exports.model;
            consumeTypes = model.get('consumeTypes') || consumeTypes;
            mediaTypes = model.get('mediaTypes') || mediaTypes;
            unitTypes = model.get('unitTypes') || unitTypes;
            promoteTypes = model.get('promoteTypes') || promoteTypes;
            statusTypes = model.get('statusTypes') || statusTypes;
            userId = model.get('userId');
            base = model.BASE;
            return fieldList;
        };
    };
    exports.unitField = unitField;
})(mf && mf.m || exports || {}, mf || module);