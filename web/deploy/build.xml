<?xml version="1.0"?>
<project default="release">
    <!--Copy to mu or ma-->
    <echo>[${proj}] basedir:${basedir}</echo>
    <!-- Path -->
    <property name="m.release.file" value="${out.dir}/${proj}.zip"/>
    <property name="proj.dir" value="${basedir}/${proj}"/>
    <property file="${proj.dir}/generated.properties"/>
    <property name="out.m.dir" value="${out.dir}/${proj}"/>
    <property name="out.m.img.dir" value="${out.m.dir}/asset/img"/>
    <property name="m.toolkit.dir" value="${toolkit.dir}/public/tmp/${proj}"/>
    <echo>[${proj}] out.dir:${out.dir}</echo>
    <echo>[${proj}] deploy.dir:${deploy.dir}</echo>
    <echo>[${proj}] out.m.dir:${out.m.dir}</echo>

    <target name="build" description="创建线上可部署的项目结构，合并js，清理调试日志等">
        <!--asset js-->
        <concat destfile="${out.m.dir}/asset/demo.js" encoding="${encoding}" fixlastline="on">
            <filelist files="${mf.js.file}"/>
            <filelist dir="${proj.dir}/asset" files="${proj}.js"/>
            <filelist dir="${proj.dir}/src" files="${js.files}"/>
        </concat>
        <!--asset css-->
        <concat destfile="${out.m.dir}/asset/demo.css" encoding="${encoding}" fixlastline="on">
            <filelist files="${mf.css.file}"/>
            <filelist dir="${proj.dir}/asset" files="${proj}.css"/>
            <filelist dir="${proj.dir}/src" files="${css.files}"/>
        </concat>
        <!--asset tpl-->
        <concat destfile="${out.m.dir}/asset/demo.html" encoding="${encoding}" fixlastline="on">
            <filelist dir="${proj.dir}/asset" files="${proj}.html"/>
            <filelist dir="${proj.dir}/src" files="${tpl.files}"/>
        </concat>
        <!--other asset files-->
        <copy todir="${out.m.img.dir}">
            <fileset dir="${basedir}/asset/img"/>
            <fileset dir="${proj.dir}/asset/img"/>
        </copy>
        <!--entry files-->
        <copy todir="${out.m.dir}">
            <filelist dir="${proj.dir}" files="index.html main.html"/>
        </copy>
    </target>

    <target name="deploy-rmlog" depends="build" unless="enableDebugLog"
            description="删除调试日志:log/debug，保留info/warn/error">
        <replace token="console.log" value="//console.log" encoding="${encoding}" dir="${out.m.dir}/asset">
            <include name="**/*.js"/>
        </replace>
        <replace token="console.debug" value="//console.debug" encoding="${encoding}" dir="${out.m.dir}/asset">
            <include name="**/*.js"/>
        </replace>
    </target>

    <target name="deploy-min" depends="deploy-rmlog" if="enableMinimize"
            description="mobads-deploy: js、css混淆压缩、html压缩、静态资源版本控制">
        <java jar="${deploy.dir}/deploy.jar" failonerror="true" fork="true">
            <arg line="
            -yui '${deploy.dir}/yuicompressor.jar'
            -v
            -c ${encoding}
            -r ${out.m.dir}
            -e 'index,main,admin,asset,data'
            -a 'html'
            "/>
        </java>
    </target>

    <target name="deploy-gzip" depends="deploy-min" if="enableGzip" description="gzip">
        <echo>确认ie对gzip支持状态后执行</echo>
        <echo>线上tomcat设置Content-Encoding:gzip</echo>
    </target>

    <target name="debug" depends="deploy-gzip" description="调试环境，部署至toolkit">
        <copy todir="${out.m.dir}/data">
            <fileset dir="${proj.dir}/data"/>
        </copy>
    </target>

    <target name="release" depends="deploy-gzip" description="线上环境部署包">
        <zip destfile="${m.release.file}">
            <fileset dir="${out.m.dir}"/>
        </zip>
        <copy todir="${out.m.dir}/data">
            <fileset dir="${proj.dir}/data"/>
        </copy>
    </target>
</project>